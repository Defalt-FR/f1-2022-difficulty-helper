{"ast":null,"code":"var _jsxFileName = \"/home/rlfh/f1-2022-difficulty-helper/src/Track.jsx\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport luxon, { DateTime } from 'luxon';\nimport ChronoTime, { toMillis } from './ChronoTime';\n\nclass Track extends React.Component {\n  render() {\n    if (!this.props.data) {\n      return '';\n    }\n\n    const MAX_AI_LEVEL = 110;\n    const trackInfo = this.props.data;\n    const targetLap = this.props.targetLap;\n    var targetLevel = trackInfo.times.find(el => {\n      var dtLapTime = DateTime.fromFormat(el, \"m:s,SSS\");\n      var lapTimeMs = toMillis(dtLapTime);\n      console.debug('lapTimeMs:', lapTimeMs);\n      console.debug('targetLap:', targetLap);\n      console.debug('targetLap >= lapTimeMs:', targetLap >= lapTimeMs);\n      return targetLap <= lapTimeMs;\n    });\n    var targetLevelPos = trackInfo.times.indexOf(targetLevel);\n    console.log('Target level position:', targetLevelPos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Track information\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, \"Details\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"track-information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"track-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, trackInfo.name), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"track-map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, \"Recommended difficulty level\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"difficulty-level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, MAX_AI_LEVEL - targetLevelPos), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"Track times\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }\n    }, \"AI Level\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 29\n      }\n    }, \"Target time\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    }, \"Delta\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }, trackInfo.times == null ? '' : trackInfo.times.map((time, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 33\n      }\n    }, MAX_AI_LEVEL - i, \" \", i == targetLevelPos ? ' ⭐' : '', \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 33\n      }\n    }, time), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }\n    }, Duration.fromMillis(targetLap - toMillis(DateTime.fromFormat(time, \"m:s,SSS\"))))))))));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/rlfh/f1-2022-difficulty-helper/src/Track.jsx"],"names":["React","Component","Table","luxon","DateTime","ChronoTime","toMillis","Track","render","props","data","MAX_AI_LEVEL","trackInfo","targetLap","targetLevel","times","find","el","dtLapTime","fromFormat","lapTimeMs","console","debug","targetLevelPos","indexOf","log","name","map","time","i","Duration","fromMillis"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table';\nimport luxon, { DateTime } from 'luxon';\nimport ChronoTime, { toMillis } from './ChronoTime';\n\nclass Track extends React.Component\n{\n    render() {        \n        if ( !this.props.data ) {\n            return('');\n        }\n\n        const MAX_AI_LEVEL = 110;\n        const trackInfo = this.props.data;\n        const targetLap = this.props.targetLap;\n\n        var targetLevel = trackInfo.times.find( (el) => {\n\n            var dtLapTime = DateTime.fromFormat(el, \"m:s,SSS\");\n            var lapTimeMs =  toMillis(dtLapTime);                            \n            console.debug('lapTimeMs:', lapTimeMs);\n            console.debug('targetLap:', targetLap);\n            console.debug('targetLap >= lapTimeMs:', targetLap >= lapTimeMs);\n            return targetLap <= lapTimeMs;\n        });\n\n        var targetLevelPos = trackInfo.times.indexOf(targetLevel);\n        console.log('Target level position:', targetLevelPos);\n\n        return (            \n            <div>\n                <h3>Track information</h3>        \n                <h4>Details</h4>\n                <div id='track-information'>\n                    <div id='track-name'>\n                    { trackInfo.name }\n                    </div>\n                    <div id='track-map'></div>\n                </div>\n                <h4>Recommended difficulty level</h4>\n                <div id='difficulty-level'>\n                    { MAX_AI_LEVEL - targetLevelPos }\n                </div>\n                <h4>Track times</h4>\n                <div>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>AI Level</th>\n                            <th>Target time</th>\n                            <th>Delta</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {                        \n                        trackInfo.times == null ? '' : trackInfo.times.map( (time, i) => \n                            <tr>\n                                <td>{MAX_AI_LEVEL - i} { i == targetLevelPos ? ' ⭐' : '' } </td> \n                                <td>{time}</td> \n                                <td>{ \n                                    Duration.fromMillis(targetLap - toMillis(DateTime.fromFormat(time, \"m:s,SSS\")))                                    \n                                 }</td>\n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </Table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Track;"]},"metadata":{},"sourceType":"module"}