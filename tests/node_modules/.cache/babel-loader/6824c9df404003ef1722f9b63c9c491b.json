{"ast":null,"code":"var _jsxFileName = \"/home/rlfh/f1-2022-difficulty-helper/src/ChronoTime.jsx\";\nimport React, { Component } from 'react';\nimport InputNumber from 'react-input-number';\nimport luxon, { DateTime } from 'luxon';\n\nclass ChronoTime extends React.Component {\n  constructor(props) {\n    super(props);\n    var time = DateTime.fromMillis(this.props.value);\n    this.state = {\n      timeMin: time.minute,\n      timeSec: time.second,\n      timeMilli: time.millisecond\n    };\n  }\n\n  render() {\n    const handleChange = (unit, selection) => {\n      var newTime, newTimeStr;\n      console.log('Unit:', unit);\n      console.log('Selection:', selection);\n      console.log('State:', JSON.stringify(this.state));\n\n      switch (unit) {\n        case 'm':\n          newTimeStr = ''.concat(selection, ':', this.state.timeSec, ':', this.state.timeMilli);\n          break;\n\n        case 's':\n          newTimeStr = ''.concat(this.state.timeMin, ':', selection, ':', this.state.timeMilli);\n          break;\n\n        case 'ms':\n          newTimeStr = ''.concat(this.state.timeMin, ':', this.state.timeSec, ':', selection);\n          break;\n\n        default:\n          break;\n      }\n\n      newTime = DateTime.fromFormat(newTimeStr, \"m:ss:SSS\");\n      console.log(newTimeStr);\n      console.log(newTime);\n      this.props.onChange(newTime);\n    };\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(InputNumber, {\n      id: \"timeMin\",\n      type: \"number\",\n      min: 0,\n      max: 9,\n      step: 1,\n      value: this.state.timeMin,\n      onChange: selection => handleChange('m', selection),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputNumber, {\n      id: \"timeSec\",\n      type: \"number\",\n      min: 0,\n      max: 59,\n      step: 1,\n      value: this.state.timeSec,\n      onChange: selection => handleChange('s', selection),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InputNumber, {\n      id: \"timeMili\",\n      type: \"number\",\n      min: 0,\n      max: 999,\n      step: 1,\n      value: this.state.timeMilli,\n      onChange: selection => handleChange('ms', selection),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default ChronoTime;","map":{"version":3,"sources":["/home/rlfh/f1-2022-difficulty-helper/src/ChronoTime.jsx"],"names":["React","Component","InputNumber","luxon","DateTime","ChronoTime","constructor","props","time","fromMillis","value","state","timeMin","minute","timeSec","second","timeMilli","millisecond","render","handleChange","unit","selection","newTime","newTimeStr","console","log","JSON","stringify","concat","fromFormat","onChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport InputNumber from 'react-input-number';\n\nimport luxon, { DateTime } from 'luxon'\n\nclass ChronoTime extends React.Component\n{\n\n    constructor(props) {\n        super(props);\n        \n        var time = DateTime.fromMillis(this.props.value)\n\n        this.state = {\n          timeMin: time.minute,\n          timeSec: time.second,\n          timeMilli: time.millisecond\n        };\n\n      }\n\n\n      \n\n     render() {       \n        const handleChange =  (unit, selection ) => \n        {  \n          var newTime, newTimeStr;\n  \n          console.log('Unit:', unit);\n          console.log('Selection:', selection);\n          console.log('State:', JSON.stringify(this.state));\n\n          switch(unit)\n          {\n              case 'm':                \n                newTimeStr = ''.concat(selection, ':', this.state.timeSec, ':', this.state.timeMilli);\n                break;\n              \n              case 's':                  \n                newTimeStr = ''.concat(this.state.timeMin, ':', selection, ':', this.state.timeMilli);\n                break;\n              \n              case 'ms':\n                newTimeStr = ''.concat(this.state.timeMin, ':', this.state.timeSec, ':', selection);\n                break;\n  \n              default:\n                break;\n          \n          }\n\n          newTime = DateTime.fromFormat(newTimeStr, \"m:ss:SSS\");\n          console.log(newTimeStr);\n          console.log(newTime);\n\n          this.props.onChange(newTime);\n            \n        }                        \n  \n        \n          \n        return (\n            <div>\n                <InputNumber\n                    id='timeMin'\n                    type='number'\n                    min={0}\n                    max={9}\n                    step={1}\n                    value={this.state.timeMin}\n                    onChange={ (selection) => handleChange('m',selection) }\n                />\n                <InputNumber\n                    id='timeSec'\n                    type='number'\n                    min={0}\n                    max={59}\n                    step={1}\n                    value={this.state.timeSec}\n                    onChange={(selection) => handleChange('s', selection) }\n                />\n                <InputNumber\n                    id='timeMili'\n                    type='number'\n                    min={0}\n                    max={999}\n                    step={1}\n                    value={this.state.timeMilli}\n                    onChange={(selection) => handleChange('ms',selection) }\n                />\n            </div>\n        );\n    }\n\n\n\n}\n\nexport default ChronoTime;"]},"metadata":{},"sourceType":"module"}