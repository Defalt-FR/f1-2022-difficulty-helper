{"ast":null,"code":"var _jsxFileName = \"/home/rlfh/f1-2022-difficulty-helper/src/Track.jsx\";\nimport React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport luxon, { DateTime } from 'luxon';\nimport ChronoTime, { toMillis } from './ChronoTime';\n\nclass Track extends React.Component {\n  render() {\n    if (!this.props.data) {\n      return '';\n    }\n\n    const MAX_AI_LEVEL = 110;\n    const trackInfo = this.props.data;\n    const targetLap = this.props.targetLap;\n    var targetLevel = trackInfo.times.find(el => {\n      var lapTimeMs = toMillis(DateTime.fromFormat(el, \"m:s,SSS\"));\n      console.debug('lapTimeMs:', lapTimeMs);\n      console.debug('targetLap:', targetLap);\n      console.debug('targetLap >= lapTimeMs:', targetLap >= lapTimeMs);\n      return targetLap <= lapTimeMs;\n    });\n    var targetLevelPos = trackInfo.times.indexOf(targetLevel);\n    console.log('Target level position:', targetLevelPos);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, trackInfo.name), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, \"Recommended difficulty level\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"difficulty-level\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, MAX_AI_LEVEL - targetLevelPos), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, \"Track times\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      responsive: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }, \"AI Level\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }, \"Target time\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, trackInfo.times == null ? '' : trackInfo.times.map((time, i) => /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, MAX_AI_LEVEL - i, \" \", i == targetLevelPos ? ' ⭐' : '', \" \"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 33\n      }\n    }, time)))))));\n  }\n\n}\n\nexport default Track;","map":{"version":3,"sources":["/home/rlfh/f1-2022-difficulty-helper/src/Track.jsx"],"names":["React","Component","Table","luxon","DateTime","ChronoTime","toMillis","Track","render","props","data","MAX_AI_LEVEL","trackInfo","targetLap","targetLevel","times","find","el","lapTimeMs","fromFormat","console","debug","targetLevelPos","indexOf","log","name","map","time","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,IAAqBC,QAArB,QAAqC,cAArC;;AAEA,MAAMC,KAAN,SAAoBP,KAAK,CAACC,SAA1B,CACA;AACIO,EAAAA,MAAM,GAAG;AACL,QAAK,CAAC,KAAKC,KAAL,CAAWC,IAAjB,EAAwB;AACpB,aAAO,EAAP;AACH;;AAED,UAAMC,YAAY,GAAG,GAArB;AACA,UAAMC,SAAS,GAAG,KAAKH,KAAL,CAAWC,IAA7B;AACA,UAAMG,SAAS,GAAG,KAAKJ,KAAL,CAAWI,SAA7B;AAEA,QAAIC,WAAW,GAAGF,SAAS,CAACG,KAAV,CAAgBC,IAAhB,CAAuBC,EAAD,IAAQ;AAE5C,UAAIC,SAAS,GAAIZ,QAAQ,CAACF,QAAQ,CAACe,UAAT,CAAoBF,EAApB,EAAwB,SAAxB,CAAD,CAAzB;AACAG,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAd,EAA4BH,SAA5B;AACAE,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAd,EAA4BR,SAA5B;AACAO,MAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyCR,SAAS,IAAIK,SAAtD;AACA,aAAOL,SAAS,IAAIK,SAApB;AACH,KAPiB,CAAlB;AASA,QAAII,cAAc,GAAGV,SAAS,CAACG,KAAV,CAAgBQ,OAAhB,CAAwBT,WAAxB,CAArB;AACAM,IAAAA,OAAO,CAACI,GAAR,CAAY,wBAAZ,EAAsCF,cAAtC;AAEA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMV,SAAS,CAACa,IAAhB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFJ,eAGI;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMd,YAAY,GAAGW,cADrB,CAHJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAAO,MAAA,UAAU,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,CADJ,CADJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIV,SAAS,CAACG,KAAV,IAAmB,IAAnB,GAA0B,EAA1B,GAA+BH,SAAS,CAACG,KAAV,CAAgBW,GAAhB,CAAqB,CAACC,IAAD,EAAOC,CAAP,kBAChD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKjB,YAAY,GAAGiB,CAApB,OAAyBA,CAAC,IAAIN,cAAL,GAAsB,IAAtB,GAA6B,EAAtD,MADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKK,IAAL,CAFJ,CAD2B,CAFnC,CAPJ,CADA,CAPJ,CADJ;AA8BH;;AApDL;;AAuDA,eAAepB,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport Table from 'react-bootstrap/Table';\nimport luxon, { DateTime } from 'luxon';\nimport ChronoTime, { toMillis } from './ChronoTime';\n\nclass Track extends React.Component\n{\n    render() {        \n        if ( !this.props.data ) {\n            return('');\n        }\n\n        const MAX_AI_LEVEL = 110;\n        const trackInfo = this.props.data;\n        const targetLap = this.props.targetLap;\n\n        var targetLevel = trackInfo.times.find( (el) => {\n            \n            var lapTimeMs =  toMillis(DateTime.fromFormat(el, \"m:s,SSS\"));\n            console.debug('lapTimeMs:', lapTimeMs);\n            console.debug('targetLap:', targetLap);\n            console.debug('targetLap >= lapTimeMs:', targetLap >= lapTimeMs);\n            return targetLap <= lapTimeMs;\n        });\n\n        var targetLevelPos = trackInfo.times.indexOf(targetLevel);\n        console.log('Target level position:', targetLevelPos);\n\n        return (            \n            <div>\n                <h3>{ trackInfo.name }</h3>        \n                <h4>Recommended difficulty level</h4>\n                <div id='difficulty-level'>\n                    { MAX_AI_LEVEL - targetLevelPos }\n                </div>\n                <h4>Track times</h4>\n                <div>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                            <th>AI Level</th>\n                            <th>Target time</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {                        \n                        trackInfo.times == null ? '' : trackInfo.times.map( (time, i) => \n                            <tr>\n                                <td>{MAX_AI_LEVEL - i} { i == targetLevelPos ? ' ⭐' : '' } </td> \n                                <td>{time}</td> \n                            </tr>\n                        )\n                    }\n                    </tbody>\n                </Table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Track;"]},"metadata":{},"sourceType":"module"}